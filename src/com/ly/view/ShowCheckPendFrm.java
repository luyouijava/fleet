/*
 * ShowCheckPendFrm.java
 *
 * Created on __DATE__, __TIME__
 */

package com.ly.view;

import java.util.Iterator;
import java.util.List;
import java.util.Vector;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import com.ly.bean.FleetTableBean;
import com.ly.service.FleetTableSV;

/**
 *
 * @author  __USER__
 */
public class ShowCheckPendFrm extends javax.swing.JInternalFrame {

	/** Creates new form ShowCheckPendFrm */
	public ShowCheckPendFrm() {
		initComponents();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		refreshButton = new javax.swing.JButton();
		jScrollPane2 = new javax.swing.JScrollPane();
		jScrollPane1 = new javax.swing.JScrollPane();
		resultTable = new javax.swing.JTable();
		checkButton = new javax.swing.JButton();
		confirmButton = new javax.swing.JButton();

		setTitle("\u5f85\u5ba1\u6838\u6570\u636e");

		refreshButton.setText("\u5237\u65b0");
		refreshButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				refreshButtonActionPerformed(evt);
			}
		});

		resultTable.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] {

				}, new String[] { "序号", "车号", "出发日期", "结束日期", "司机", "行程",
						"团队性质", "车费", "网付", "现收", "实际现收", "保底", "实收保底", "公司加油",
						"行车费用", "返利", "净利润", "其他", "是否审核" }) {
			Class[] types = new Class[] { java.lang.String.class,
					java.lang.String.class, java.lang.String.class,
					java.lang.String.class, java.lang.String.class,
					java.lang.String.class, java.lang.String.class,
					java.lang.String.class, java.lang.String.class,
					java.lang.String.class, java.lang.String.class,
					java.lang.String.class, java.lang.String.class,
					java.lang.String.class, java.lang.String.class,
					java.lang.String.class, java.lang.String.class,
					java.lang.String.class, java.lang.String.class };
			boolean[] canEdit = new boolean[] { false, false, false, false,
					false, false, false, false, false, false, false, false,
					false, false, false, false, false, false, false };

			public Class getColumnClass(int columnIndex) {
				return types[columnIndex];
			}

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		jScrollPane1.setViewportView(resultTable);

		jScrollPane2.setViewportView(jScrollPane1);

		checkButton.setText("\u5ba1\u6838");
		checkButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				checkButtonActionPerformed(evt);
			}
		});

		confirmButton.setText("\u786e\u5b9a");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				layout.createSequentialGroup().addContainerGap(561,
						Short.MAX_VALUE).addComponent(refreshButton).addGap(41,
						41, 41)).addComponent(jScrollPane2,
				javax.swing.GroupLayout.Alignment.TRAILING,
				javax.swing.GroupLayout.DEFAULT_SIZE, 659, Short.MAX_VALUE)
				.addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup().addContainerGap(451,
								Short.MAX_VALUE).addComponent(checkButton)
								.addGap(69, 69, 69).addComponent(confirmButton)
								.addGap(25, 25, 25)));
		layout
				.setVerticalGroup(layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								layout
										.createSequentialGroup()
										.addComponent(refreshButton)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												jScrollPane2,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												414,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(18, 18, 18)
										.addGroup(
												layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																checkButton)
														.addComponent(
																confirmButton))
										.addContainerGap(18, Short.MAX_VALUE)));

		pack();
	}// </editor-fold>
	//GEN-END:initComponents

	private void checkButtonActionPerformed(java.awt.event.ActionEvent evt) {
		int row = resultTable.getSelectedRow();
		String actionFlag = "update";
		FleetTableBean fleetTableBean = new FleetTableBean();
		FleetTableSV fleetTableSV = new FleetTableSV();
		if(row == -1){
			//未选中任何行
			JOptionPane.showMessageDialog(null, "请选择一行数据", "错误", 0);
		}else{
			fleetTableBean.setId(Integer.valueOf((String) resultTable.getValueAt(row, 0)));
			fleetTableBean.setCarid(fleetTableSV.checkInputField((String)resultTable.getValueAt(row, 1)));
			fleetTableBean.setStartdate(fleetTableSV.checkInputField((String)resultTable.getValueAt(row, 2)));
			fleetTableBean.setEnddate(fleetTableSV.checkInputField((String)resultTable.getValueAt(row, 3)));
			fleetTableBean.setDriver(fleetTableSV.checkInputField((String)resultTable.getValueAt(row, 4)));
			fleetTableBean.setTrip(fleetTableSV.checkInputField((String)resultTable.getValueAt(row, 5)));
			fleetTableBean.setTeamtype(fleetTableSV.checkInputField((String)resultTable.getValueAt(row, 6)));
			fleetTableBean.setCarincome(Integer.parseInt(fleetTableSV.checkInputField((String)resultTable.getValueAt(row, 7))));
			fleetTableBean.setNetpay(Integer.parseInt(fleetTableSV.checkInputField((String)resultTable.getValueAt(row, 8))));
			fleetTableBean.setIdealincome(Integer.parseInt(fleetTableSV.checkInputField((String)resultTable.getValueAt(row, 9))));
			fleetTableBean.setRealincome(Integer.parseInt(fleetTableSV.checkInputField((String)resultTable.getValueAt(row, 10))));
			fleetTableBean.setIdealguarantee(Integer.parseInt(fleetTableSV.checkInputField((String)resultTable.getValueAt(row, 11))));
			fleetTableBean.setRealguarantee(Integer.parseInt(fleetTableSV.checkInputField((String)resultTable.getValueAt(row, 12))));
			fleetTableBean.setPetrolcost(Integer.parseInt(fleetTableSV.checkInputField((String)resultTable.getValueAt(row, 13))));
			fleetTableBean.setDrivingcost(Integer.parseInt(fleetTableSV.checkInputField((String)resultTable.getValueAt(row, 14))));
			fleetTableBean.setRebate(Integer.parseInt(fleetTableSV.checkInputField((String)resultTable.getValueAt(row, 15))));
			fleetTableBean.setNetprofit(Integer.parseInt(fleetTableSV.checkInputField((String)resultTable.getValueAt(row, 16))));
			fleetTableBean.setOther(fleetTableSV.checkInputField((String)resultTable.getValueAt(row, 17)));
			String flag = (String)resultTable.getValueAt(row, 18);
			if("已审核".equals(flag)){
				fleetTableBean.setFlag(1);
			}else{
				fleetTableBean.setFlag(0);
			}
			CheckFrm checkFrm = new CheckFrm(fleetTableBean);
			MainFrm.getTable().add(checkFrm);
			checkFrm.setVisible(true);	
		}
	}

	private void fillTable(List list) {
		DefaultTableModel dtm = (DefaultTableModel) resultTable.getModel();
		dtm.setRowCount(0);
		Iterator<FleetTableBean> it = list.iterator();
		FleetTableSV fleetTableSV = new FleetTableSV();
		while (it.hasNext()) {
			Vector rowVector = new Vector();
			FleetTableBean fleetTableBean = it.next();
			rowVector.add(fleetTableSV.show2User(fleetTableBean.getId() + ""));
			rowVector.add(fleetTableSV.show2User(fleetTableBean.getCarid()));
			rowVector
					.add(fleetTableSV.show2User(fleetTableBean.getStartdate()));
			rowVector.add(fleetTableSV.show2User(fleetTableBean.getEnddate()));
			rowVector.add(fleetTableSV.show2User(fleetTableBean.getDriver()));
			rowVector.add(fleetTableSV.show2User(fleetTableBean.getTrip()));
			rowVector.add(fleetTableSV.show2User(fleetTableBean.getTeamtype()));
			rowVector.add(fleetTableSV.show2User(fleetTableBean.getCarincome()
					+ ""));
			rowVector.add(fleetTableSV.show2User(fleetTableBean.getNetpay()
					+ ""));
			rowVector.add(fleetTableSV.show2User(fleetTableBean
					.getIdealincome()
					+ ""));
			rowVector.add(fleetTableSV.show2User(fleetTableBean.getRealincome()
					+ ""));
			rowVector.add(fleetTableSV.show2User(fleetTableBean
					.getIdealguarantee()
					+ ""));
			rowVector.add(fleetTableSV.show2User(fleetTableBean
					.getRealguarantee()
					+ ""));
			rowVector.add(fleetTableSV.show2User(fleetTableBean.getPetrolcost()
					+ ""));
			rowVector.add(fleetTableSV.show2User(fleetTableBean
					.getDrivingcost()
					+ ""));
			rowVector.add(fleetTableSV.show2User(fleetTableBean.getRebate()
					+ ""));
			rowVector.add(fleetTableSV.show2User(fleetTableBean.getNetprofit()
					+ ""));
			rowVector.add(fleetTableSV.show2User(fleetTableBean.getOther()));
			if (fleetTableBean.getFlag() == 0) {
				rowVector.add("待审核");
			} else if (fleetTableBean.getFlag() == 1) {
				rowVector.add("已审核");
			} else {
				rowVector.add("");
			}

			dtm.addRow(rowVector);
			rowVector = null;//gc
		}
	}

	private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {
		FleetTableSV fleetTableSV = new FleetTableSV();
		List list = fleetTableSV.getCheckPendFleetTableBean();
		this.fillTable(list);
	}

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JButton checkButton;
	private javax.swing.JButton confirmButton;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JButton refreshButton;
	private javax.swing.JTable resultTable;
	// End of variables declaration//GEN-END:variables

}